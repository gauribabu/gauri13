<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20223.23.0310.1054                               -->
<workbook original-version='18.1' source-build='2022.3.5 (20223.23.0310.1054)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='worldometer_coronavirus_daily_data' inline='true' name='federated.1nvr42p1a73eut1dwhydb1a19lem' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='worldometer_coronavirus_daily_data' name='textscan.1ocnaqz140ou4b151qm821jg0nxa'>
            <connection class='textscan' directory='C:/Users/lenovo/OneDrive/Desktop/PROJECTS/data visualisation' filename='worldometer_coronavirus_daily_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1ocnaqz140ou4b151qm821jg0nxa' name='worldometer_coronavirus_daily_data.csv' table='[worldometer_coronavirus_daily_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='country' ordinal='1' />
            <column datatype='real' name='cumulative_total_cases' ordinal='2' />
            <column datatype='real' name='daily_new_cases' ordinal='3' />
            <column datatype='real' name='active_cases' ordinal='4' />
            <column datatype='real' name='cumulative_total_deaths' ordinal='5' />
            <column datatype='real' name='daily_new_deaths' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1ocnaqz140ou4b151qm821jg0nxa' name='worldometer_coronavirus_daily_data.csv' table='[worldometer_coronavirus_daily_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='country' ordinal='1' />
            <column datatype='real' name='cumulative_total_cases' ordinal='2' />
            <column datatype='real' name='daily_new_cases' ordinal='3' />
            <column datatype='real' name='active_cases' ordinal='4' />
            <column datatype='real' name='cumulative_total_deaths' ordinal='5' />
            <column datatype='real' name='daily_new_deaths' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[worldometer_coronavirus_daily_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[worldometer_coronavirus_daily_data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_daily_data.csv_AC76A1E19BD84F269336CC61E2197504]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[worldometer_coronavirus_daily_data.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_daily_data.csv_AC76A1E19BD84F269336CC61E2197504]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cumulative_total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cumulative_total_cases]</local-name>
            <parent-name>[worldometer_coronavirus_daily_data.csv]</parent-name>
            <remote-alias>cumulative_total_cases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_daily_data.csv_AC76A1E19BD84F269336CC61E2197504]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_new_cases]</local-name>
            <parent-name>[worldometer_coronavirus_daily_data.csv]</parent-name>
            <remote-alias>daily_new_cases</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_daily_data.csv_AC76A1E19BD84F269336CC61E2197504]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>active_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[active_cases]</local-name>
            <parent-name>[worldometer_coronavirus_daily_data.csv]</parent-name>
            <remote-alias>active_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_daily_data.csv_AC76A1E19BD84F269336CC61E2197504]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cumulative_total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cumulative_total_deaths]</local-name>
            <parent-name>[worldometer_coronavirus_daily_data.csv]</parent-name>
            <remote-alias>cumulative_total_deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_daily_data.csv_AC76A1E19BD84F269336CC61E2197504]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_new_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_new_deaths]</local-name>
            <parent-name>[worldometer_coronavirus_daily_data.csv]</parent-name>
            <remote-alias>daily_new_deaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_daily_data.csv_AC76A1E19BD84F269336CC61E2197504]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='worldometer_coronavirus_daily_data.csv' datatype='table' name='[__tableau_internal_object_id__].[worldometer_coronavirus_daily_data.csv_AC76A1E19BD84F269336CC61E2197504]' role='measure' type='quantitative' />
      <column caption='Active Cases' datatype='real' name='[active_cases]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Cumulative Total Cases' datatype='real' name='[cumulative_total_cases]' role='measure' type='quantitative' />
      <column caption='Cumulative Total Deaths' datatype='real' name='[cumulative_total_deaths]' role='measure' type='quantitative' />
      <column caption='Daily New Cases' datatype='real' name='[daily_new_cases]' role='measure' type='quantitative' />
      <column caption='Daily New Deaths' datatype='real' name='[daily_new_deaths]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[cumulative_total_cases]' derivation='Sum' name='[sum:cumulative_total_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cumulative_total_deaths]' derivation='Sum' name='[sum:cumulative_total_deaths:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bosnia And Herzegovina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China Macao Sar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Timor Leste&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Pierre And Miquelon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Falkland Islands Malvinas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Kitts And Nevis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wallis And Futuna Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Caribbean Netherlands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Democratic Republic Of The Congo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sao Tome And Principe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua And Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Vincent And The Grenadines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;State Of Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Isle Of Man&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cote D Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turks And Caicos Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea Bissau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trinidad And Tobago&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China Hong Kong Sar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_deaths:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='worldometer_coronavirus_daily_data.csv' id='worldometer_coronavirus_daily_data.csv_AC76A1E19BD84F269336CC61E2197504'>
            <properties context=''>
              <relation connection='textscan.1ocnaqz140ou4b151qm821jg0nxa' name='worldometer_coronavirus_daily_data.csv' table='[worldometer_coronavirus_daily_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='date' name='date' ordinal='0' />
                  <column datatype='string' name='country' ordinal='1' />
                  <column datatype='real' name='cumulative_total_cases' ordinal='2' />
                  <column datatype='real' name='daily_new_cases' ordinal='3' />
                  <column datatype='real' name='active_cases' ordinal='4' />
                  <column datatype='real' name='cumulative_total_deaths' ordinal='5' />
                  <column datatype='real' name='daily_new_deaths' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='active cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 countries with Active cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_daily_data' name='federated.1nvr42p1a73eut1dwhydb1a19lem' />
          </datasources>
          <datasource-dependencies datasource='federated.1nvr42p1a73eut1dwhydb1a19lem'>
            <column caption='Active Cases' datatype='real' name='[active_cases]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Cumulative Total Cases' datatype='real' name='[cumulative_total_cases]' role='measure' type='quantitative' />
            <column caption='Cumulative Total Deaths' datatype='real' name='[cumulative_total_deaths]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[active_cases]' derivation='Sum' name='[sum:active_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cumulative_total_cases]' derivation='Sum' name='[sum:cumulative_total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cumulative_total_deaths]' derivation='Sum' name='[sum:cumulative_total_deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([active_cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]' />
              <size column='[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:active_cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value='circle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_deaths:qk]</rows>
        <cols>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]</cols>
      </table>
      <simple-id uuid='{C66CE996-9EB1-410E-8B59-E28052614AB0}' />
    </worksheet>
    <worksheet name='confirmed vs deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Confirmed vs Deaths&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_daily_data' name='federated.1nvr42p1a73eut1dwhydb1a19lem' />
          </datasources>
          <datasource-dependencies datasource='federated.1nvr42p1a73eut1dwhydb1a19lem'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Cumulative Total Cases' datatype='real' name='[cumulative_total_cases]' role='measure' type='quantitative' />
            <column caption='Cumulative Total Deaths' datatype='real' name='[cumulative_total_deaths]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[cumulative_total_cases]' derivation='Sum' name='[sum:cumulative_total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cumulative_total_deaths]' derivation='Sum' name='[sum:cumulative_total_deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_deaths:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.1nvr42p1a73eut1dwhydb1a19lem].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#8cd17d' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nvr42p1a73eut1dwhydb1a19lem].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk] + [federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_deaths:qk])</rows>
        <cols>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{6E3B1769-79E9-4107-8A5C-34F9DF61015B}' />
    </worksheet>
    <worksheet name='global cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_daily_data' name='federated.1nvr42p1a73eut1dwhydb1a19lem' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nvr42p1a73eut1dwhydb1a19lem'>
            <column caption='Active Cases' datatype='real' name='[active_cases]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Cumulative Total Cases' datatype='real' name='[cumulative_total_cases]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[active_cases]' derivation='Sum' name='[sum:active_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cumulative_total_cases]' derivation='Sum' name='[sum:cumulative_total_cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]' />
              <lod column='[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]' />
              <lod column='[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:active_cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nvr42p1a73eut1dwhydb1a19lem].[Latitude (generated)]</rows>
        <cols>[federated.1nvr42p1a73eut1dwhydb1a19lem].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1D13E4E3-80D7-44BE-A60B-C50A31E5B2A8}' />
    </worksheet>
    <worksheet name='top 10 countries with highest deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 countries with highest deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_daily_data' name='federated.1nvr42p1a73eut1dwhydb1a19lem' />
          </datasources>
          <datasource-dependencies datasource='federated.1nvr42p1a73eut1dwhydb1a19lem'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Cumulative Total Deaths' datatype='real' name='[cumulative_total_deaths]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[cumulative_total_deaths]' derivation='Sum' name='[sum:cumulative_total_deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([cumulative_total_deaths])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_deaths:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_deaths:qk]' />
              <color column='[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_deaths:qk]' />
              <text column='[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]' />
              <text column='[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{3CAC2C7A-AE6D-4523-850C-6729FA46BA6F}' />
    </worksheet>
    <worksheet name='top 20 confirmed countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 20 confirmed countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_daily_data' name='federated.1nvr42p1a73eut1dwhydb1a19lem' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nvr42p1a73eut1dwhydb1a19lem'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Cumulative Total Cases' datatype='real' name='[cumulative_total_cases]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[cumulative_total_cases]' derivation='Sum' name='[sum:cumulative_total_cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Iran&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Peru&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;UK&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;USA&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</rows>
        <cols>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]</cols>
      </table>
      <simple-id uuid='{6BC65D6D-C7A1-45AA-879F-2B6F32DFD1D3}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98014' id='9' param='horz' type-v2='layout-flow' w='99002' x='499' y='993'>
            <zone h='98014' id='7' type-v2='layout-basic' w='89027' x='499' y='993'>
              <zone h='49007' id='3' name='global cases' w='50873' x='38653' y='993'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49007' id='5' name='top 20 confirmed countries' w='38154' x='499' y='993'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49007' id='6' name='top 10 countries with highest deaths' w='29676' x='499' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49007' id='11' name='active cases' w='26808' x='62718' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49007' id='14' name='confirmed vs deaths' w='32543' x='30175' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98014' id='8' is-fixed='true' param='vert' type-v2='layout-flow' w='9975' x='89526' y='993'>
              <zone h='10050' id='10' name='top 10 countries with highest deaths' pane-specification-id='0' param='[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_deaths:qk]' type-v2='color' w='9975' x='89526' y='993'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='35236' id='12' name='active cases' pane-specification-id='0' param='[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]' type-v2='color' w='9975' x='89526' y='11043'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='19727' id='13' name='active cases' pane-specification-id='0' param='[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:active_cases:qk]' type-v2='size' w='9975' x='89526' y='46279'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7321' id='15' name='confirmed vs deaths' pane-specification-id='2' param='[federated.1nvr42p1a73eut1dwhydb1a19lem].[:Measure Names]' type-v2='color' w='9975' x='89526' y='66006'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1750' minheight='1750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='17' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98014' id='16' param='vert' type-v2='layout-flow' w='99002' x='499' y='993'>
                <zone fixed-size='280' h='49007' id='5' is-fixed='true' name='top 20 confirmed countries' w='38154' x='499' y='993'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49007' id='3' is-fixed='true' name='global cases' w='50873' x='38653' y='993'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49007' id='6' is-fixed='true' name='top 10 countries with highest deaths' w='29676' x='499' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10050' id='10' name='top 10 countries with highest deaths' pane-specification-id='0' param='[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_deaths:qk]' type-v2='color' w='9975' x='89526' y='993'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49007' id='14' is-fixed='true' name='confirmed vs deaths' w='32543' x='30175' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7321' id='15' name='confirmed vs deaths' pane-specification-id='2' param='[federated.1nvr42p1a73eut1dwhydb1a19lem].[:Measure Names]' type-v2='color' w='9975' x='89526' y='66006'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49007' id='11' is-fixed='true' name='active cases' w='26808' x='62718' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='35236' id='12' name='active cases' pane-specification-id='0' param='[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]' type-v2='color' w='9975' x='89526' y='11043'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='19727' id='13' name='active cases' pane-specification-id='0' param='[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:active_cases:qk]' type-v2='size' w='9975' x='89526' y='46279'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{72957655-2C0B-473E-8C22-E2F9AB859060}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='top 20 confirmed countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
                  <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Peru&quot;</value>
                <value>1272124487.0</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
                  <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;South Africa&quot;</value>
                <value>1415903750.0</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
                  <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Ukraine&quot;</value>
                <value>1489180197.0</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
                  <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Netherlands&quot;</value>
                <value>1533418110.0</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
                  <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Indonesia&quot;</value>
                <value>1767158869.0</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
                  <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Poland&quot;</value>
                <value>1779044270.0</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
                  <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Mexico&quot;</value>
                <value>1884423814.0</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
                  <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Colombia&quot;</value>
                <value>2337628117.0</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
                  <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Iran&quot;</value>
                <value>2378656323.0</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
                  <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Argentina&quot;</value>
                <value>2730257371.0</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
                  <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Spain&quot;</value>
                <value>3105478683.0</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
                  <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Italy&quot;</value>
                <value>3385285079.0</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
                  <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Germany&quot;</value>
                <value>3714135849.0</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
                  <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Turkey&quot;</value>
                <value>4034437279.0</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
                  <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Russia&quot;</value>
                <value>4620860099.0</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
                  <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;UK&quot;</value>
                <value>5062957080.0</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
                  <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;France&quot;</value>
                <value>5286989583.0</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
                  <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Brazil&quot;</value>
                <value>10868783066.0</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
                  <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;India&quot;</value>
                <value>15887175083.0</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
                  <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_cases:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;USA&quot;</value>
                <value>25923193266.0</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{02F8CD81-061C-4643-8984-0C1DA147A3CA}' />
    </window>
    <window class='worksheet' name='global cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{86E4C4BC-696C-4008-806B-E02ADB13E3C9}' />
    </window>
    <window class='worksheet' name='top 10 countries with highest deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8D4879FF-A8D9-48CE-BD87-9CDD415B9633}' />
    </window>
    <window class='worksheet' name='active cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:active_cases:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D9082777-9EE9-48C2-8C63-32ED0D073969}' />
    </window>
    <window class='worksheet' name='confirmed vs deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1nvr42p1a73eut1dwhydb1a19lem].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1nvr42p1a73eut1dwhydb1a19lem].[sum:cumulative_total_deaths:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[:Measure Names]</field>
            <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E5FBF911-FF9D-4236-9201-99B29BA8406F}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='active cases'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[none:country:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='confirmed vs deaths'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1nvr42p1a73eut1dwhydb1a19lem].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='global cases'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='top 10 countries with highest deaths' />
        <viewpoint name='top 20 confirmed countries' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{A26C392E-F74D-4A1D-915D-12DC125CF6A9}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='active cases' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='confirmed vs deaths' width='192'>
      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
      25lulswAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='global cases' width='192'>
      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
      s5AAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='top 10 countries with highest deaths' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='top 20 confirmed countries' width='192'>
      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
      rkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
